import streamlit as st
from supabase import create_client, Client
import pandas as pd
from dotenv import load_dotenv
import os

st.set_page_config(page_title="Dashboard de Qualidade", layout="wide")

st.title("游늵 Dashboard de Qualidade da 츼gua")

# Carregar vari치veis de ambiente
load_dotenv()

# Configura칞칚o da Supabase
url: str = os.getenv("SUPABASE_URL")
key: str = os.getenv("SUPABASE_KEY")

if url is None or key is None:
    raise Exception(
        "Supabase URL ou Key n칚o encontradas nas vari치veis de ambiente. "
        "Defina SUPABASE_URL e SUPABASE_KEY."
    )

supabase: Client = create_client(url, key)

# Credenciais do usu치rio na Supabase
SUPABASE_EMAIL = os.getenv("SUPABASE_EMAIL")
SUPABASE_PASSWORD = os.getenv("SUPABASE_PASSWORD")

if SUPABASE_EMAIL is None or SUPABASE_PASSWORD is None:
    raise Exception(
        "Credenciais do usu치rio da Supabase n칚o encontradas nas vari치veis de ambiente. "
        "Defina SUPABASE_EMAIL e SUPABASE_PASSWORD."
    )

# Tentar cadastrar o usu치rio, se j치 existir, fazer login
try:
    user = supabase.auth.sign_up({"email": SUPABASE_EMAIL, "password": SUPABASE_PASSWORD})
except Exception:
    user = supabase.auth.sign_in_with_password({"email": SUPABASE_EMAIL, "password": SUPABASE_PASSWORD})

user_id = user.user.id

def carregar_dados():
    """Fun칞칚o com tratamento de erros aprimorado"""
    try:
        response = (
            supabase.table("qualidade")
            .select("*")
            .execute()
        )
        if not response.data:
            st.error("Tabela existe mas est치 vazia")
            return pd.DataFrame()
        return pd.DataFrame(response.data)
    except Exception as e:
        st.error(f"Erro ao acessar Supabase: {str(e)}")
        return pd.DataFrame()

# Adicione esta verifica칞칚o ANTES de carregar os dados
projeto_correto = url.startswith("https://") and "ebenezercarvalho" in url
st.sidebar.markdown(f"游댕 Conex칚o com projeto: **{'V치lida' if projeto_correto else 'Inv치lida'}**")

# Configura칞칚o do layout do Streamlit


# Carregar os dados
df = carregar_dados()

if df.empty:
    st.warning("Nenhum dado encontrado na Supabase.")
else:
    # Criar um seletor de ano
    anos = sorted(df["Ano"].unique())
    ano_selecionado = st.sidebar.selectbox("Selecione o Ano", anos)
    
    # Filtrar os dados pelo ano selecionado
    df_filtrado = df[df["Ano"] == ano_selecionado]
    
    # Exibir tabela de dados
    st.dataframe(df_filtrado)
    
    # Criar um gr치fico de dispers칚o
    import matplotlib.pyplot as plt
    fig, ax = plt.subplots()
    ax.scatter(df_filtrado["Data Coleta"], df_filtrado["Valor"], color='blue', alpha=0.5)
    ax.set_xlabel("Data Coleta")
    ax.set_ylabel("Valor")
    ax.set_title("Valores das An치lises")
    plt.xticks(rotation=45)
    st.pyplot(fig)
